-- 댓글 좋아요 테이블
CREATE TABLE ALL_CMT_LIKE 
(
  LIKE_NUM NUMBER NOT NULL 
, CMT_NUM NUMBER 
, LIKE_USER VARCHAR2(20 BYTE) 
, LIKES NUMBER DEFAULT 0 
, CONSTRAINT ALL_CMT_LIKE_PK PRIMARY KEY 
  (
    LIKE_NUM 
  )
  ENABLE 
);

-- 댓글 테이블
CREATE TABLE ALL_COMMENTS 
(
  CMT_NUM NUMBER DEFAULT 0 NOT NULL 
, COMM_NUM NUMBER DEFAULT 0 NOT NULL 
, CMT_ID VARCHAR2(20 BYTE) NOT NULL 
, CMT_CONTENT VARCHAR2(2000 BYTE) NOT NULL 
, CMT_DATE DATE DEFAULT SYSDATE 
, CMT_LIKES NUMBER DEFAULT 0 
, CONSTRAINT ALL_COMMENTS_PK PRIMARY KEY 
  (
    CMT_NUM 
  )
  ENABLE 
);

ALTER TABLE ALL_COMMENTS
ADD CONSTRAINT ALL_COMMENTS_FK1 FOREIGN KEY
(
  COMM_NUM 
)
REFERENCES ALL_COMMUNITY
(
  COMM_NUM 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE ALL_COMMENTS
ADD CONSTRAINT ALL_COMMENTS_FK2 FOREIGN KEY
(
  CMT_ID 
)
REFERENCES MEMBER
(
  M_ID 
)
ENABLE;

-- 게시글 좋아요 테이블
CREATE TABLE ALL_COMMU_LIKE 
(
  LIKE_NUM NUMBER NOT NULL 
, COMM_NUM NUMBER 
, LIKE_USER VARCHAR2(20 BYTE) 
, LIKES NUMBER 
, CONSTRAINT ALL_COMMU_LIKE_PK PRIMARY KEY 
  (
    LIKE_NUM 
  )
  ENABLE 
);

-- 게시글 테이블
CREATE TABLE ALL_COMMUNITY 
(
  COMM_NUM NUMBER NOT NULL 
, COMM_ID VARCHAR2(20 BYTE) NOT NULL 
, COMM_TITLE VARCHAR2(1000 BYTE) NOT NULL 
, COMM_CONTENT VARCHAR2(4000 BYTE) NOT NULL 
, COMM_DATE DATE DEFAULT sysdate NOT NULL 
, COMM_VCOUNT NUMBER DEFAULT 0 
, COMM_CMT NUMBER DEFAULT 0 
, COMM_LIKES NUMBER DEFAULT 0 
, CONSTRAINT ALL_COMMUNITY_PK PRIMARY KEY 
  (
    COMM_NUM 
  )
  ENABLE 
);

ALTER TABLE ALL_COMMUNITY
ADD CONSTRAINT ALL_COMMUNITY_FK1 FOREIGN KEY
(
  COMM_ID 
)
REFERENCES MEMBER
(
  M_ID 
)
ENABLE;

-- FAQ 테이블
CREATE TABLE FAQ 
(
  F_NUM NUMBER NOT NULL 
, F_CATEGORY VARCHAR2(20 BYTE) 
, F_TITLE VARCHAR2(1000 BYTE) NOT NULL 
, F_CONTENT VARCHAR2(4000 BYTE) NOT NULL 
, F_WRITER VARCHAR2(20 BYTE) NOT NULL 
, F_DATE DATE DEFAULT SYSDATE NOT NULL 
, F_VCOUNT VARCHAR2(20 BYTE) DEFAULT 0 
, CONSTRAINT FAQ_PK PRIMARY KEY 
  (
    F_NUM 
  )
  ENABLE 
);

-- 카카오페이 테이블
CREATE TABLE KAKAOPAY 
(
  M_ID VARCHAR2(20 BYTE) NOT NULL 
, NUM NUMBER NOT NULL 
, TID VARCHAR2(20 BYTE) NOT NULL 
, AID VARCHAR2(20 BYTE) 
, CID VARCHAR2(20 BYTE) 
, CASH NUMBER DEFAULT 0 NOT NULL 
, AMOUNT_TOTAL NUMBER 
, AMOUNT_POINT NUMBER 
, QUANTITY NUMBER 
, ITEM_NAME VARCHAR2(100 BYTE) 
, CREATED_AT VARCHAR2(20 BYTE) 
, APPROVED_AT VARCHAR2(20 BYTE) 
, PARTNER_ORDER_ID VARCHAR2(100 BYTE) 
, PARTNER_USER_ID VARCHAR2(100 BYTE) 
, PAYMENT_METHOD_TYPE VARCHAR2(20 BYTE) 
, CONSTRAINT KAKAOPAY_PK PRIMARY KEY 
  (
    NUM 
  )
  ENABLE 
);

ALTER TABLE KAKAOPAY
ADD CONSTRAINT KAKAOPAY_FK1 FOREIGN KEY
(
  M_ID 
)
REFERENCES MEMBER
(
  M_ID 
)
ENABLE;

-- 멤버 테이블
CREATE TABLE MEMBER 
(
  M_ID VARCHAR2(20 BYTE) NOT NULL 
, PW VARCHAR2(60 BYTE) NOT NULL 
, NAME VARCHAR2(20 BYTE) NOT NULL 
, GENDER VARCHAR2(20 BYTE) NOT NULL 
, ADDR VARCHAR2(200 BYTE) NOT NULL 
, TEL VARCHAR2(20 BYTE) NOT NULL 
, EMAIL VARCHAR2(40 BYTE) NOT NULL 
, BIRTH VARCHAR2(20 BYTE) NOT NULL 
, M_NTRP NUMBER NOT NULL 
, INVITE_CODE VARCHAR2(20 BYTE) 
, INTRODUCE VARCHAR2(200 BYTE) DEFAULT NULL 
, M_IMG VARCHAR2(50 BYTE) DEFAULT NULL 
, M_LOCATION VARCHAR2(40 BYTE) NOT NULL 
, M_TIME VARCHAR2(100 BYTE) 
, M_CLUB VARCHAR2(50 BYTE) 
, M_INVITE_CODE VARCHAR2(20 BYTE) NOT NULL 
, CASH NUMBER DEFAULT 0 NOT NULL 
, ROLE VARCHAR2(20 BYTE) DEFAULT 'USER' NOT NULL 
, M_NUM NUMBER NOT NULL 
, CONSTRAINT MEMBER_PK PRIMARY KEY 
  (
    M_ID 
  )
  ENABLE 
);

ALTER TABLE MEMBER
ADD CONSTRAINT MEMBER_UK1 UNIQUE 
(
  M_NUM 
)
ENABLE;

ALTER TABLE MEMBER
ADD CONSTRAINT MEMBER_FK1 FOREIGN KEY
(
  M_CLUB 
)
REFERENCES CLUB
(
  C_NAME 
)
ENABLE;

-- 공지사항 테이블
CREATE TABLE NOTICE 
(
  N_NUM NUMBER NOT NULL 
, N_CATEGORY VARCHAR2(20 BYTE) 
, N_TITLE VARCHAR2(1000 BYTE) NOT NULL 
, N_CONTENT VARCHAR2(4000 BYTE) NOT NULL 
, N_WRITER VARCHAR2(20 BYTE) NOT NULL 
, N_DATE DATE DEFAULT SYSDATE NOT NULL 
, N_VCOUNT VARCHAR2(20 BYTE) DEFAULT 0 
, CONSTRAINT NOTICE_PK PRIMARY KEY  
  (
    N_NUM 
  )
  ENABLE 
);

-- 1:1 문의 테이블
CREATE TABLE QNA 
(
  Q_NUM NUMBER NOT NULL 
, Q_WRITER VARCHAR2(20 BYTE) 
, Q_DATE DATE DEFAULT SYSDATE 
, Q_CONTENT VARCHAR2(4000 BYTE) 
, Q_TITLE VARCHAR2(1000 BYTE) 
, CONSTRAINT QNA_PK PRIMARY KEY 
  (
    Q_NUM 
  )
  ENABLE 
);

-- 1:1 답변 테이블
CREATE TABLE QNA_ANSWER 
(
  QA_NUM NUMBER NOT NULL 
, Q_NUM NUMBER NOT NULL 
, QA_WRITER VARCHAR2(20 BYTE) NOT NULL 
, QA_CONTENT VARCHAR2(4000 BYTE) NOT NULL 
, QA_DATE DATE DEFAULT SYSDATE NOT NULL 
, CONSTRAINT QNA_ANSWER_PK PRIMARY KEY 
  (
    QA_NUM 
  )
  ENABLE 
);

--GAME

CREATE TABLE GAME 
(
  G_NUM NUMBER NOT NULL 
, G_NAME VARCHAR2(200 BYTE) NOT NULL 
, G_AMOUNT NUMBER NOT NULL 
, G_START_DT VARCHAR2(20 BYTE) NOT NULL 
, G_BILL NUMBER 
, G_INFO VARCHAR2(200 BYTE) 
, G_CREATER VARCHAR2(20 BYTE) 
, C_ID VARCHAR2(20 BYTE) 
, FAC_ID VARCHAR2(20 BYTE) 
, G_METHOD VARCHAR2(50 BYTE) 
, G_NTRP FLOAT(126) 
, G_END_DT VARCHAR2(20 BYTE) NOT NULL 
, G_OPEN VARCHAR2(20 BYTE) DEFAULT 'Y' 
, G_REMAINING NUMBER 
, FAC_NAME VARCHAR2(200 BYTE) 
, G_ADDRESS VARCHAR2(200 BYTE) 
, G_RESID NUMBER 
, G_JOINER VARCHAR2(20 BYTE) 
, CONSTRAINT GAME_PK PRIMARY KEY 
  (
    G_NUM 
  ));

--GAME_JOIN

CREATE TABLE GAME_JOIN 
(
  G_RESID NUMBER NOT NULL 
, G_JOINER VARCHAR2(20 BYTE) NOT NULL 
, G_NUM NUMBER NOT NULL 
, CONSTRAINT GAME_JOIN_PK PRIMARY KEY 
  (
    G_RESID
  ));

-- 친구 테이블
CREATE TABLE SNS 
(
  SNS_NUM NUMBER NOT NULL 
, M_USER_ID VARCHAR2(20 BYTE) NOT NULL 
, TO_USER_ID VARCHAR2(20 BYTE) NOT NULL 
, ARE_WE_FRIEND_ST NUMBER 
, CONSTRAINT SNS_PK PRIMARY KEY 
  (
    SNS_NUM 
  )
ENABLE
);

ALTER TABLE SNS
ADD CONSTRAINT SNS_FK1 FOREIGN KEY
(
  M_USER_ID 
)
REFERENCES MEMBER
(
  M_ID 
)
ENABLE;

ALTER TABLE SNS
ADD CONSTRAINT SNS_FK2 FOREIGN KEY
(
  TO_USER_ID 
)
REFERENCES MEMBER
(
  M_ID 
)
ENABLE;

-- court 테이블
CREATE TABLE COURT 
(
  COURT_ID VARCHAR2(20 BYTE) NOT NULL 
, FAC_ID VARCHAR2(20 BYTE) NOT NULL 
, COURT_NAME VARCHAR2(100 BYTE) NOT NULL 
, CONSTRAINT COURT_PK PRIMARY KEY 
  (
    COURT_ID    
  )
);

ALTER TABLE COURT
ADD CONSTRAINT COURT_FK1 FOREIGN KEY
(
  FAC_ID 
)
REFERENCES FACILITY
(
  FAC_ID 
)
ON DELETE CASCADE ENABLE;

-- facility 테이블
CREATE TABLE FACILITY 
(
  FAC_ID VARCHAR2(20 BYTE) NOT NULL 
, FAC_NAME VARCHAR2(50 BYTE) NOT NULL 
, FLOOR_TYPE VARCHAR2(20 BYTE) NOT NULL 
, COURT_NO NUMBER NOT NULL 
, ADDRESS VARCHAR2(150 BYTE) NOT NULL 
, F_CONFIRM VARCHAR2(20 BYTE) DEFAULT 'N' NOT NULL 
, COURT_PIC1 VARCHAR2(20 BYTE) DEFAULT 'f_default.jpg' NOT NULL 
, COURT_PIC2 VARCHAR2(20 BYTE) 
, COURT_PIC3 VARCHAR2(20 BYTE) 
, REGISTER_ID VARCHAR2(20 BYTE) NOT NULL 
, OPEN_TIME VARCHAR2(20 BYTE) NOT NULL 
, CLOSE_TIME VARCHAR2(20 BYTE) NOT NULL 
, IN_OR_OUT VARCHAR2(20 BYTE) NOT NULL 
, CONV VARCHAR2(200 BYTE) 
, COME VARCHAR2(2000 BYTE) 
, REGI_TIME DATE DEFAULT SYSDATE NOT NULL 
, C_PRICE NUMBER NOT NULL 
, CONSTRAINT FACILITY_PK PRIMARY KEY 
  (
    FAC_ID 
  )
);

-- reserve 테이블
CREATE TABLE RESERVE 
(
  RESERVE_NO NUMBER NOT NULL 
, COURT_ID VARCHAR2(20 BYTE) NOT NULL 
, USER_ID VARCHAR2(20 BYTE) NOT NULL 
, START_TIME VARCHAR2(20 BYTE) NOT NULL 
, END_TIME VARCHAR2(20 BYTE) NOT NULL 
, TOTAL_FEE NUMBER NOT NULL 
, CONSTRAINT RESERVE_PK PRIMARY KEY 
  (
    RESERVE_NO 
  )
);

ALTER TABLE RESERVE
ADD CONSTRAINT RESERVE_FK1 FOREIGN KEY
(
  COURT_ID 
)
REFERENCES COURT
(
  COURT_ID 
)
ON DELETE CASCADE ENABLE;

ALTER TABLE RESERVE
ADD CONSTRAINT RESERVE_FK2 FOREIGN KEY
(
  USER_ID 
)
REFERENCES MEMBER
(
  M_ID 
)
ON DELETE CASCADE ENABLE;

------Auction-----
CREATE TABLE AUCTION 
(
  SELLER VARCHAR2(20 BYTE) NOT NULL 
, P_NUM NUMBER NOT NULL 
, P_NAME VARCHAR2(100 BYTE) NOT NULL 
, CAT VARCHAR2(20 BYTE) NOT NULL 
, P_PIC1 VARCHAR2(100 BYTE) NOT NULL 
, P_PIC2 VARCHAR2(100 BYTE) 
, P_PIC3 VARCHAR2(100 BYTE) 
, P_INFO VARCHAR2(1000 BYTE) NOT NULL 
, P_COND VARCHAR2(50 BYTE) NOT NULL 
, P_INSERT_TIME TIMESTAMP(6) NOT NULL 
, DEAD_LINE DATE NOT NULL 
, B_GRANTED VARCHAR2(20 BYTE) 
, LOW NUMBER 
, START_PRICE NUMBER 
, HIGH_PRICE NUMBER 
, S_GRANTED VARCHAR2(20 BYTE) 
, P_VIEWCOUNT NUMBER DEFAULT 0 
, DEAL_DONE VARCHAR2(20 BYTE) 
, CONSTRAINT AUCTION_PK PRIMARY KEY 
  (
    P_NUM 
  )
  ENABLE 
);
-------Auction_list

CREATE TABLE AUCTION_LIST 
(
  P_NUM NUMBER NOT NULL 
, GRANTED_B VARCHAR2(20 BYTE) 
, BID_TIME TIMESTAMP(6) NOT NULL 
, PRICE NUMBER NOT NULL 
, BUYER VARCHAR2(20 BYTE) NOT NULL 
, B_NUM VARCHAR2(20 BYTE) NOT NULL 
, CONSTRAINT AUCTION_LIST_PK PRIMARY KEY 
  (
    B_NUM 
  )
  ENABLE 
);

ALTER TABLE AUCTION_LIST
ADD CONSTRAINT AUCTION_LIST_FK1 FOREIGN KEY
(
  P_NUM 
)
REFERENCES AUCTION
(
  P_NUM 
)
ON DELETE CASCADE ENABLE;

------Report-------

CREATE TABLE REPORT 
(
  P_NUM NUMBER 
, R_NUM NUMBER NOT NULL 
, R_ANSWER VARCHAR2(1000 BYTE) DEFAULT '신고가 접수되어 처리중입니다' 
, R_REPORTER VARCHAR2(20 BYTE) 
, R_DATE DATE DEFAULT sysdate 
, R_NAME VARCHAR2(200 BYTE) 
, R_CHECKED VARCHAR2(20 BYTE) DEFAULT 'unchecked' 
, RA_DATE DATE DEFAULT sysdate 
, R_INFO VARCHAR2(1000 BYTE) 
, R_REASON VARCHAR2(200 BYTE) DEFAULT NULL 
, CONSTRAINT REPORT_PK PRIMARY KEY 
  (
    R_NUM 
  )
  ENABLE 
);

ALTER TABLE REPORT
ADD CONSTRAINT REPORT_FK1 FOREIGN KEY
(
  P_NUM 
)
REFERENCES AUCTION
(
  P_NUM 
)
ON DELETE CASCADE ENABLE;


-----응찰----
CREATE SEQUENCE SEQ_BID;
-----물품----
CREATE SEQUENCE SEQ_PRODUCT;
-----신고----
CREATE SEQUENCE SEQ_REPORT;
-- 댓글 시퀀스
create sequence all_cmt_seq;
-- 댓글 좋아요 시퀀스
create sequence cmtlike_num_seq;
-- 게시글 시퀀스
create sequence all_comm_seq;
-- 게시글 좋아요 시퀀스
create sequence COMMLIKE_NUM_SEQ;
-- reserve 시퀀스
create sequence seq_reserve;
-- facility 시퀀스
create sequence seq_facility;
--게임 시퀀스
create sequence G_NUM;
--게임조인 시퀀스
create sequence G_RESID;
-- 친구 시퀀스
create sequence SNS_NUM;
-- FAQ 시퀀스
CREATE SEQUENCE F_NUM;
-- 카카오페이 시퀀스
CREATE SEQUENCE KAKAO_SEQ;
-- 멤버 시퀀스
CREATE SEQUENCE MEMBER_SEQ;
-- 공지사항 시퀀스
CREATE SEQUENCE N_NUM;
-- 1:1 문의 시퀀스
CREATE SEQUENCE Q_NUM;
-- 1:1 답변 시퀀스
CREATE SEQUENCE QA_NUM;

-- INSERT_COURT_ID 프로시져
create or replace PROCEDURE INSERT_COURT_ID(
    p_fac_id IN COURT.FAC_ID%TYPE,
    p_court_no IN NUMBER,
    p_fac_name IN VARCHAR
) AS
    num1 NUMBER := 1;
BEGIN
    FOR i IN 1..p_court_no LOOP
        INSERT INTO court (court_id, fac_id, court_name)
        VALUES (p_fac_id || '_court_' || num1, p_fac_id, p_fac_name || ' 코트 ' || num1);

        num1 := num1 + 1;
    END LOOP;
END;